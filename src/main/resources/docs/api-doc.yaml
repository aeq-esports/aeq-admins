openapi: 3.0.1
info:
  title: AeQ Connect API
  description: 'Official Aequilibritas eSports Community API.'
  termsOfService: ''
  contact:
    name: Developers
    email: cypher@aeq-esports.de
  license:
    name: 'All Rights Reserved'
  version: 0.1.0

externalDocs:
  description: GitHub
  url: https://github.com/aeq-esports/aeq-admins
servers:
  - url: 'TODO'

tags:
  - name: user
    description: data about community members

paths:

  # -----------------------------------
  # User Paths
  # -----------------------------------

  /users:
    get:
      summary: 'Get a list of existing members'
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      security:
        - member_auth:
            - write:pets
            - read:pets

  /users/me:
    get:
      summary: 'Get information about the currently authenticated user'
      responses:
        200:
          description: 'Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - member_auth:
            - write:pets
            - read:pets

  /users/{userId}:
    get:
      summary: "Get information about a specific user"
      parameters:
        - name: userId
          in: path
          description: "ID of the user"
          required: true
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: "User with ID not found"

  # -----------------------------------
  # Trial Period Paths
  # -----------------------------------

components:

  schemas:

    # -----------------------------------
    # User Schemas
    # -----------------------------------

    User:
      type: object
      description: Data related to a user of the community.
      properties:
        memberId:
          type: integer
          format: int64
          example: 12
        username:
          type: string
          description: Username of this memeber, unique accross the platform
          example: lara123
        firstName:
          type: string
          example: Lara
        gender:
          type: string
          enum:
            - male
            - female
            - unknown
          example: female
          additionalProperties:
            x-role-names: [read-user-private]
        dateOfBirth:
          type: string
          format: date
          description: The date of birth
          example: '1996-07-16'
          additionalProperties:
            x-role-names: [read-user-private]
        age:
          type: integer
          description: The age in years, rounded down
          example: 23
        locale:
          type: string
          description: A locale representing the preferred language
          example: de-DE
        isTrialMember:
          type: boolean
          description: true if this user has an open trial period, otherwise false
        isBanned:
          type: boolean
          description: true if this user is banned, otherwise false
        roles:
          type: array
          description: Roles of this user
          items:
            type: string
        createdAt:
          type: string
          format: date-time
          description: Point of time this this user has been created at

    MemberBan:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
          description: Id of the user that is banned
        bannedBy:
          type: integer
          format: int64
          description: Id of the user that initiated the ban
        reason:
          type: object
          properties:
            type:
              type: string
              description: The type of ban
            message:
              type: string
              description: An additional message that provides detailed information
        bannedAt:
          type: string
          format: date-time
          description: Point of time this user was banned
        bannedUntil:
          type: string
          format: date-time
          description: 'Point of time until this user is banned, not present if the duration of the ban is infinite'

    # -----------------------------------
    # Trial Period Schemas
    # -----------------------------------

    TrialPeriod:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        state:
          type: string
          enum:
            - open
            - pending
            - approved
            - rejected
        createdAt:
          type: string
          format: date-time
        endsAt:
          type: string
          format: date-time

    TrialPeriodVote:
      type: object
      properties:
        trialPeriodId:
          type: integer
          format: int64
        memberId:
          type: integer
          format: int64
        consensus:
          type: string
          enum:
            - prolong
            - approve
            - reject
          description: >
            Consensus:
             * prolong - The trial period should be extended
             * approve - The trial period should be approved
             * reject - The trial period should be rejected
        comment:
          type: string
          description: An additional comment that provides detailed information
        createdAt:
          type: string
          format: date-time
          description: The time this vote has been created
      required:
        - trialPeriodId
        - memberId
        - consensus

    # -----------------------------------
    # Other Schemas
    # -----------------------------------

    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string

  securitySchemes:
    aeq_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://TODO/oauth/dialog
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
